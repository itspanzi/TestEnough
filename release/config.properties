# *REQUIRED*
#
# @Description: This property gives the name of any one class in your application under test. This is used to figure out the class loader from which
# this class gets loaded. This is how we get an access to all the classes that get loaded so that we can BCI them.
#
# @ValueType: Fully Qualified Name of a Java Class
sampleProductionClass=com.org.SampleClass

# *OPTIONAL*
#
# @Description: This property specifies a comma separated list of packages that you want to track test information for. If you leave this out
# all classes (including libraries that your application depends upon) get tracked. It will be a good idea to specify this.
#
# @ValueType: Comma separated list of packages
#
# populateIncludePackages=com.org, com.foo, com.org.another

# *OPTIONAL*
#
# @Description: This property represents the pattern which the names of the test classes follow. Using this, Test Enough figures out what the test class
# is. Using this information, test enough knows which test class is calling the tracker.
#
# @ValueType: Valid Java Regular Expression.
#
# testClassPattern=.*Test

# *OPTIONAL*
#
# @Description: This property represents the file path where the tracking information needs to be persisted. It is this file that will be used in order
# to figure out which tests need to be run based on production code changes.
#
# @ValueType: Path to the file including the name of the file
#
# trackingInformationFilePath=out/te_tracking_info.txt

# *OPTIONAL*
#
# @Description: This is the code that is used for instrumentation. Override this if you know what you want. This will change the default
# behaviour of the tool. This is more for developers to plug things in.
#
# @ValueType: Valid (Properly compiling) Java Code
#
# codeToInsert=testenough.counter.Track.trackCurrentThread();
